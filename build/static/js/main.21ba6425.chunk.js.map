{"version":3,"sources":["Header.js","Content.js","Footer.js","App.js","serviceWorker.js","index.js","photo_farung.png","project.png"],"names":["Header","react_default","a","createElement","src","Photo","alt","Component","Content","state","isHovering","handleMouseHover","_this","setState","onMouseEnter","this","onMouseLeave","className","Project","Footer","App","src_Header","src_Content","src_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"wPAemBA,mLARb,OACEC,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,6BACNF,EAAAC,EAAAC,cAAA,OAAKC,IAAKC,IAAOC,IAAI,qBALRC,6BCyCFC,6MAvCjBC,MAAQ,CACNC,YAAY,KAGdC,iBAAiB,WACfC,EAAKC,SAAS,CAACH,YAAYE,EAAKH,MAAMC,sFAKpC,OACCT,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,yCACAF,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,iDACAF,EAAAC,EAAAC,cAAA,qEACAF,EAAAC,EAAAC,cAAA,4DACAF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,uDACCF,EAAAC,EAAAC,cAAA,yEACAF,EAAAC,EAAAC,cAAA,OAAMW,aAAcC,KAAKJ,iBAAkBK,aAAcD,KAAKJ,kBAC7DI,KAAKN,MAAMC,YAAcT,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,OAAKc,UAAU,MAAMb,IAAKc,IAASZ,IAAI,cACvEL,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,8DACAF,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,gEACAF,EAAAC,EAAAC,cAAA,uDACAF,EAAAC,EAAAC,cAAA,4DACAF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,oCAhCYI,aCWHY,mLATb,OACElB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WAASF,EAAAC,EAAAC,cAAA,WACXF,EAAAC,EAAAC,cAAA,KAAGc,UAAU,KAAb,6IALaV,aCgBNa,mLAXX,OACEnB,EAAAC,EAAAC,cAAA,WACDF,EAAAC,EAAAC,cAACkB,EAAD,MACApB,EAAAC,EAAAC,cAACmB,EAAD,MACArB,EAAAC,EAAAC,cAACoB,EAAD,cAPahB,aCMEiB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO7B,EAAAC,EAAAC,cAAC4B,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,kCEnInBC,EAAAC,QAAiBC,EAAAC,EAAuB,4DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.21ba6425.chunk.js","sourcesContent":["import React ,{Component} from 'react';\r\nimport Photo from './photo_farung.png';\r\n\r\n\r\nclass Header extends Component {\r\n    render(){\r\n      \r\n      return(\r\n        <div ><h1 >Farung Polsavang\r\n        <img src={Photo} alt=\"myphoto\" /></h1></div>\r\n      );\r\n\r\n      }\r\n    }\r\n\r\n    export default Header;","import React ,{Component} from 'react';\r\nimport Project from './project.png';\r\n\r\n\r\nclass Content extends Component {\r\n\r\n  state = {\r\n    isHovering: false\r\n  };\r\n\r\n  handleMouseHover=()=> {\r\n    this.setState({isHovering:!this.state.isHovering});\r\n  }\r\n\r\n    render(){\r\n      \r\n      return(\r\n       <div >\r\n         <h2  >Contact</h2>\r\n         <p>Email : farung.pol@gmail.com</p>\r\n         <h2 >Personal Information</h2>\r\n         <p>Birth Date : 08/02/2539 ( 23 years )</p>\r\n         <p>Address : 103 Moo 1, Huai Ket, Taphan Hin, Pichit, 66110</p>\r\n         <p>Hobbies  : Watching TV series, Surfing Internet</p>\r\n         <h2 >Education</h2>\r\n         <p>2014 - 2018 : B.Sc. Information Technology</p>\r\n          <p>King Mongkut's Universityof Technology Thonburi     GPA 2.10</p>\r\n          <div  onMouseEnter={this.handleMouseHover} onMouseLeave={this.handleMouseHover}>\r\n          {this.state.isHovering && <div ><img className=\"pic\" src={Project} alt=\"my_photo\"/></div>}\r\n          <h2 >Senior Project</h2>     \r\n          <p>Driver Doze-off Alert System Via Image Processing</p>\r\n          <p>My responsibilities\r\n          <li>Install Raspbian OS and libraries on Raspberry Pi.</li>\r\n          <li>Connect camera, buzzer, speaker, rgb led.</li>\r\n          <li>Make a program run automatically at startup.</li></p></div>\r\n          <h2 >Basic Skills</h2>\r\n          <p>Html, MS Office</p>\r\n         </div>\r\n        \r\n\r\n      );\r\n\r\n      }\r\n    }\r\n\r\n    export default Content;\r\n    ","import React ,{Component} from 'react';\r\n\r\n\r\n\r\nclass Footer extends Component {\r\n    render(){\r\n      return(\r\n        <div >\r\n          <br></br><br></br>\r\n        <p className=\"q\">\"A calm and modest life brings more happiness than the pursuit of success combined with constant restlessness\"  - Albert Einstein\r\n        </p></div>\r\n      );\r\n      }\r\n    }\r\n\r\n    export default Footer;","import React ,{Component} from 'react';\r\nimport  './App.css';\r\nimport Header from './Header.js';\r\nimport Content from './Content.js';\r\nimport Footer from './Footer.js';\r\n\r\nclass App extends Component {\r\n  render(){\r\n    \r\n    return(\r\n      <div>\r\n     <Header/>\r\n     <Content/>\r\n     <Footer/>\r\n     </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/photo_farung.3edab0e3.png\";","module.exports = __webpack_public_path__ + \"static/media/project.a7bd0b3b.png\";"],"sourceRoot":""}